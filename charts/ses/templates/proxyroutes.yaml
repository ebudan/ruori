---
# Having problems using tlsoptions from default namespace. 
# Using a local version always worked prior to v2.10.
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  labels:
    instance: instance-helloworld
  name: tlsoptions
  namespace: {{ .Values.deployment.namespace }}
spec:
  #EB20241210-1 preferServerCipherSuites: true
  sniStrict: false
  minVersion: VersionTLS12
{{- range $name,$conf := .Values.modules.core}}
{{- if $conf.rproxy }}
---
apiVersion: traefik.io/v1alpha1
{{- if $conf.rproxy.passthrough }}
kind: IngressRouteTCP
{{- else }}
kind: IngressRoute
{{- end}}
metadata:
  # annotations:
  #   traefik.ingress.kubernetes.io/router.entrypoints: {{$name}}
  labels: 
    instance: instance-{{ $.Values.deployment.name }}
  name: proxy-{{$name}}
  namespace: {{ $.Values.deployment.namespace }}
spec:
  entryPoints:
    - {{$conf.rproxy.entrypoint}}
  tls:
  {{- if $conf.rproxy.passthrough }}
    passthrough: true
  {{- else }}
    # as defined in traefik chart elsewhere...
    certResolver: letsencrypt
    options:
      name: tlsoptions
      namespace: {{ $.Values.deployment.namespace }}
  {{- end }}
  routes:
      {{- if $conf.rproxy.passthrough }}
    - match: HostSNI(`{{ $.Values.deployment.host }}`)
      {{- else }}
    - kind: Rule
      match: Host(`{{ $.Values.deployment.host }}`)
      {{- end }}
      services:
        - name: {{ $name }}
          namespace: {{ $.Values.deployment.namespace }}
          port: {{ required "missing containerPort" $conf.ports.containerPort }} # We use containerPort for service as well as containers for some degree of simplicity..
{{- end }}
{{- end }}
