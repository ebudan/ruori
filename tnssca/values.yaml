#
# tnssca is a single-container, single-pod image deployment recipe with
# Traefik as front-end, namespaced, with secrets. Think of it as an
# alternative deployment method to a .rpm on an nginx host.
#
# The deployment instance is used as namespace and module name extensively.
#

replicaCount: 1

image:
  repository: undefined-img-repository
  pullPolicy: IfNotPresent
  tag: "undefined-image-version"

# We prefer to configure the cluster engine with repository access...
imagePullSecrets: []

# nameOverride and fullnameOverride must be provided, and are used
# as the cluster-unique identifier for service, namespace, etc. 
nameOverride: ""
fullnameOverride: ""

# We expect the service account to be provided by the Traefik setup. 
serviceAccount:
  create: false

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  allowPrivilegeEscalation: false
  runAsGroup: 100
  runAsUser: 405

# Our app should run at port 80. Configure your container accordingly.
service:
  type: ClusterIP
  port: &ref-service-port 80

# We take care of ingress with a separate Traefik setup and the
# networking template. Here we disable the Helm default template. 
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# ADMIN, HOST are required.
deplEnv: []
#  ADMIN: 'undefined-env-admin'
#  HOST: 'undefined-env-host'

# Specify any ENV vars to relay to the variable here.
appEnv:
  APP_PORT: *ref-service-port
  APP_LOGLEVEL: debug
  APP_NOTLS: "true"
  # Do not set APP_PASSWORDFILE - automated, due to secrets setup 

mount:
  dirs: []
  secrets: ""

